<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:widget="http://www.netvibes.com/ns/">
<head>
    <meta name="author" content="DSIS" />
    <meta name="description" content="3DEXPERIENCE Product Data Widget" />
    <meta name="apiVersion" content="1.0" />
    <meta name="debugMode" content="true" />
    <meta name="strictMode" content="false" />
    <title>Product Data Dashboard</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 30px;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }
        
        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }
        
        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: #3498db;
            margin-bottom: 10px;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 0.9em;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .filters {
            display: none;
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 25px;
            padding: 30px;
        }
        
        .product-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border-left: 5px solid #3498db;
            position: relative;
            overflow: hidden;
        }
        
        .product-card::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 0 60px 60px 0;
            border-color: transparent #3498db transparent transparent;
            opacity: 0.1;
        }
        
        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }
        
        .product-card.private {
            border-left-color: #e74c3c;
        }
        
        .product-card.in-work {
            border-left-color: #f39c12;
        }
        
        .product-title {
            font-size: 1.4em;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 15px;
            line-height: 1.3;
        }
        
        .product-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .info-item {
            display: flex;
            flex-direction: column;
            padding: 8px;
            background: #f8f9fa;
            border-radius: 5px;
        }
        
        .info-label {
            font-size: 0.8em;
            color: #7f8c8d;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 3px;
        }
        
        .info-value {
            font-weight: 500;
            color: #2c3e50;
        }
        
        .status-badge {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .status-private {
            background: #ffe6e6;
            color: #e74c3c;
        }
        
        .status-in-work {
            background: #fff3cd;
            color: #856404;
        }
        
        .type-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            background: rgba(52, 152, 219, 0.1);
            color: #3498db;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.7em;
            font-weight: bold;
        }
        
        .product-id {
            font-family: 'Courier New', monospace;
            background: #34495e;
            color: white;
            padding: 8px 12px;
            border-radius: 5px;
            font-size: 0.8em;
            margin-top: 15px;
            word-break: break-all;
        }
        
        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: 1fr;
                padding: 15px;
            }
            
            .stats {
                grid-template-columns: repeat(2, 1fr);
                padding: 15px;
            }
            
            .filter-group {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ”§ Product Data Dashboard</h1>
            <p>3DEXPERIENCE Platform Widget</p>
        </div>
        
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="totalProducts">11</div>
                <div class="stat-label">Total Products</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="privateCount">8</div>
                <div class="stat-label">Private</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="inWorkCount">3</div>
                <div class="stat-label">In Work</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="uniqueOwners">3</div>
                <div class="stat-label">Unique Owners</div>
            </div>
        </div>
        
        <div class="filters">
            <div class="filter-group">
                <label>Filter by State:</label>
                <select id="stateFilter" onchange="filterProducts()">
                    <option value="">All States</option>
                    <option value="PRIVATE">Private</option>
                    <option value="IN_WORK">In Work</option>
                </select>
                
                <label>Filter by Owner:</label>
                <select id="ownerFilter" onchange="filterProducts()">
                    <option value="">All Owners</option>
                </select>
                
                <label>Search:</label>
                <input type="text" id="searchFilter" placeholder="Search products..." onkeyup="filterProducts()">
            </div>
        </div>
        
        <div class="products-grid" id="productsContainer">
        </div>
    </div>
    
    <script>
        // Product data
        const productData = {
            "totalItems": 11,
            "member": [
                {
                    "name": "prd-54860013-00000001",
                    "title": "Test_Part_DemoLeader_20mm",
                    "id": "252B0EF3000055A06710DBD10000FCE0",
                    "type": "VPMReference",
                    "modified": "10/17/2024 11:48:28 AM",
                    "created": "10/17/2024 11:48:28 AM",
                    "revision": "A",
                    "state": "IN_WORK",
                    "owner": "DemoLeader",
                    "organization": "Company Name",
                    "collabspace": "DemoPublicDesign",
                    "cestamp": "1A26BF566C6300006710DD6A00000A1C"
                },
                {
                    "name": "prd-54860013-00000021",
                    "title": "Physical Product00000021",
                    "id": "D442B456E166040068B83A0100000013",
                    "type": "VPMReference",
                    "modified": "09/03/2025 02:52:25 PM",
                    "created": "09/03/2025 02:52:25 PM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "Default",
                    "cestamp": "D442B456E166040068B83A08000002A4"
                },
                {
                    "name": "prd-54860013-00000022",
                    "title": "Physical Product00000022",
                    "id": "D442B456E166040068B9A1BB00000025",
                    "type": "VPMReference",
                    "modified": "09/04/2025 04:30:36 PM",
                    "created": "09/04/2025 04:30:36 PM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "DemoPublicDesign",
                    "cestamp": "D442B456E166040068B9A28C00000790"
                },
                {
                    "name": "prd-54860013-00000024",
                    "title": "MySpecilizedProduct",
                    "id": "D442B4563FBC000068BEA07B00000009",
                    "type": "CDFRollerBearing",
                    "modified": "09/08/2025 11:24:39 AM",
                    "created": "09/08/2025 11:23:22 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "Default",
                    "cestamp": "D442B4563FBC000068BEA0D7000074F6"
                },
                {
                    "name": "prd-54860013-00000026",
                    "title": "Product1",
                    "id": "D442B4563FBC000068C3D89700000023",
                    "type": "VPMReference",
                    "modified": "09/12/2025 10:24:15 AM",
                    "created": "09/12/2025 10:24:15 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "Default",
                    "cestamp": "D442B4563FBC000068C3D8AF00007A74"
                },
                {
                    "name": "prd-54860013-00000028",
                    "title": "Physical Product00000028",
                    "id": "D442B4563FBC000068C3D9190000002D",
                    "type": "VPMReference",
                    "modified": "09/12/2025 10:26:21 AM",
                    "created": "09/12/2025 10/26:21 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "CDFTraining",
                    "cestamp": "D442B4563FBC000068C3D92D00007A80"
                },
                {
                    "name": "prd-54860013-00000029",
                    "title": "MyproducTest",
                    "id": "D442B4563FBC000068C3D99B00000035",
                    "type": "VPMReference",
                    "modified": "09/12/2025 10:28:26 AM",
                    "created": "09/12/2025 10:28:26 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "Default",
                    "cestamp": "D442B4563FBC000068C3D9AA00007A8A"
                },
                {
                    "name": "prd-54860013-00000035",
                    "title": "Physical Product00000035",
                    "id": "09B15A810000403068C3E0580001259A",
                    "type": "VPMReference",
                    "modified": "09/12/2025 11:02:52 AM",
                    "created": "09/12/2025 11:02:52 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "Default",
                    "cestamp": "D442B4563FBC000068C3E1BC00007AF4"
                },
                {
                    "name": "prd-54860013-00000051",
                    "title": "Physical Product00000051",
                    "id": "D442B4563FBC000068C3E59F00000041",
                    "type": "CDFRollerBearing",
                    "modified": "09/12/2025 11:19:51 AM",
                    "created": "09/12/2025 11:19:51 AM",
                    "revision": "A",
                    "state": "IN_WORK",
                    "owner": "ErikPeters",
                    "organization": "Company Name",
                    "collabspace": "CDFTraining",
                    "cestamp": "D442B4563FBC000068C3E5B700007B3A"
                },
                {
                    "name": "prd-54860013-00000052",
                    "title": "Physical Product00000052",
                    "id": "D442B4563FBC000068C3E5EA00000047",
                    "type": "CDFRollerBearing",
                    "modified": "09/12/2025 11:21:45 AM",
                    "created": "09/12/2025 11:21:45 AM",
                    "revision": "A",
                    "state": "IN_WORK",
                    "owner": "ErikPeters",
                    "organization": "Company Name",
                    "collabspace": "CDFTraining",
                    "cestamp": "D442B4563FBC000068C3E62900007B48"
                },
                {
                    "name": "prd-54860013-00000053",
                    "title": "Physical Product00000053",
                    "id": "D442B4563FBC000068C3E7610000004F",
                    "type": "CDFRollerBearing",
                    "modified": "09/12/2025 11:27:20 AM",
                    "created": "09/12/2025 11:27:20 AM",
                    "revision": "A",
                    "state": "PRIVATE",
                    "owner": "VPLMAdminUser",
                    "organization": "Company Name",
                    "collabspace": "CDFTraining",
                    "cestamp": "D442B4563FBC000068C3E77800007B5E"
                }
            ]
        };
        
        let filteredProducts = productData.member;
        
        function initializeWidget() {
            populateOwnerFilter();
            renderProducts(productData.member);
            updateStats();
        }
        
        function populateOwnerFilter() {
            const owners = [...new Set(productData.member.map(p => p.owner))];
            const ownerSelect = document.getElementById('ownerFilter');
            
            owners.forEach(owner => {
                const option = document.createElement('option');
                option.value = owner;
                option.textContent = owner;
                ownerSelect.appendChild(option);
            });
        }
        
        function renderProducts(products) {
            const container = document.getElementById('productsContainer');
            container.innerHTML = '';
            
            products.forEach(product => {
                const productCard = createProductCard(product);
                container.appendChild(productCard);
            });
        }
        
        function createProductCard(product) {
            const card = document.createElement('div');
            card.className = `product-card ${product.state.toLowerCase().replace('_', '-')}`;
            
            card.innerHTML = `
                <div class="type-badge">${product.type}</div>
                <div class="product-title">${product.title}</div>
                
                <div class="product-info">
                    <div class="info-item">
                        <div class="info-label">Owner</div>
                        <div class="info-value">${product.owner}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Revision</div>
                        <div class="info-value">${product.revision}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Created</div>
                        <div class="info-value">${formatDate(product.created)}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Modified</div>
                        <div class="info-value">${formatDate(product.modified)}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Collabspace</div>
                        <div class="info-value">${product.collabspace}</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Status</div>
                        <div class="info-value">
                            <span class="status-badge status-${product.state.toLowerCase().replace('_', '-')}">${product.state}</span>
                        </div>
                    </div>
                </div>
                
                <div class="product-id">${product.id}</div>
            `;
            
            return card;
        }
        
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', {
                month: 'short',
                day: 'numeric',
                year: 'numeric'
            });
        }
        
        function filterProducts() {
            const stateFilter = document.getElementById('stateFilter').value;
            const ownerFilter = document.getElementById('ownerFilter').value;
            const searchFilter = document.getElementById('searchFilter').value.toLowerCase();
            
            filteredProducts = productData.member.filter(product => {
                const matchesState = !stateFilter || product.state === stateFilter;
                const matchesOwner = !ownerFilter || product.owner === ownerFilter;
                const matchesSearch = !searchFilter || 
                    product.title.toLowerCase().includes(searchFilter) ||
                    product.name.toLowerCase().includes(searchFilter) ||
                    product.type.toLowerCase().includes(searchFilter);
                
                return matchesState && matchesOwner && matchesSearch;
            });
            
            renderProducts(filteredProducts);
            updateFilteredStats();
        }
        
        function updateStats() {
            const privateCount = productData.member.filter(p => p.state === 'PRIVATE').length;
            const inWorkCount = productData.member.filter(p => p.state === 'IN_WORK').length;
            const uniqueOwners = [...new Set(productData.member.map(p => p.owner))].length;
            
            document.getElementById('totalProducts').textContent = productData.totalItems;
            document.getElementById('privateCount').textContent = privateCount;
            document.getElementById('inWorkCount').textContent = inWorkCount;
            document.getElementById('uniqueOwners').textContent = uniqueOwners;
        }
        
        function updateFilteredStats() {
            const privateCount = filteredProducts.filter(p => p.state === 'PRIVATE').length;
            const inWorkCount = filteredProducts.filter(p => p.state === 'IN_WORK').length;
            const uniqueOwners = [...new Set(filteredProducts.map(p => p.owner))].length;
            
            document.getElementById('totalProducts').textContent = filteredProducts.length;
            document.getElementById('privateCount').textContent = privateCount;
            document.getElementById('inWorkCount').textContent = inWorkCount;
            document.getElementById('uniqueOwners').textContent = uniqueOwners;
        }
        
        // Initialize the widget when the page loads
        window.onload = initializeWidget;
    </script>
</body>
</html>
